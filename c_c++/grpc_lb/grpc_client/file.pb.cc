// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: file.proto

#include "file.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace file {
constexpr FileUploadBlockReq::FileUploadBlockReq(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , fid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , data_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , fsize_(int64_t{0})
  , bnum_(0)
  , bsize_(0)
  , lbsize_(0)
  , bindex_(0)
  , offset_(0)
  , len_(0)
  , bfin_(0){}
struct FileUploadBlockReqDefaultTypeInternal {
  constexpr FileUploadBlockReqDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FileUploadBlockReqDefaultTypeInternal() {}
  union {
    FileUploadBlockReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FileUploadBlockReqDefaultTypeInternal _FileUploadBlockReq_default_instance_;
constexpr FileUploadBlockRsp::FileUploadBlockRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : msg_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , fid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , sbid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , sfid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , code_(0)
  , bindex_(0)
  , offset_(0)
  , len_(0){}
struct FileUploadBlockRspDefaultTypeInternal {
  constexpr FileUploadBlockRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FileUploadBlockRspDefaultTypeInternal() {}
  union {
    FileUploadBlockRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FileUploadBlockRspDefaultTypeInternal _FileUploadBlockRsp_default_instance_;
constexpr FileUploadBlockRspList::FileUploadBlockRspList(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : fileuploadblockrsp_(){}
struct FileUploadBlockRspListDefaultTypeInternal {
  constexpr FileUploadBlockRspListDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FileUploadBlockRspListDefaultTypeInternal() {}
  union {
    FileUploadBlockRspList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FileUploadBlockRspListDefaultTypeInternal _FileUploadBlockRspList_default_instance_;
constexpr FileDownloadReq::FileDownloadReq(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , sfid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct FileDownloadReqDefaultTypeInternal {
  constexpr FileDownloadReqDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FileDownloadReqDefaultTypeInternal() {}
  union {
    FileDownloadReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FileDownloadReqDefaultTypeInternal _FileDownloadReq_default_instance_;
constexpr FileDownloadRsp::FileDownloadRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : msg_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , code_(0)
  , bnum_(0)
  , size_(int64_t{0})
  , bsize_(0)
  , lbsize_(0){}
struct FileDownloadRspDefaultTypeInternal {
  constexpr FileDownloadRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FileDownloadRspDefaultTypeInternal() {}
  union {
    FileDownloadRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FileDownloadRspDefaultTypeInternal _FileDownloadRsp_default_instance_;
constexpr FileDownloadBlockReq::FileDownloadBlockReq(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , sfid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , bindex_(0){}
struct FileDownloadBlockReqDefaultTypeInternal {
  constexpr FileDownloadBlockReqDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FileDownloadBlockReqDefaultTypeInternal() {}
  union {
    FileDownloadBlockReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FileDownloadBlockReqDefaultTypeInternal _FileDownloadBlockReq_default_instance_;
constexpr FileDownloadBlockRsp::FileDownloadBlockRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , data_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct FileDownloadBlockRspDefaultTypeInternal {
  constexpr FileDownloadBlockRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FileDownloadBlockRspDefaultTypeInternal() {}
  union {
    FileDownloadBlockRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FileDownloadBlockRspDefaultTypeInternal _FileDownloadBlockRsp_default_instance_;
}  // namespace file
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_file_2eproto[7];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_file_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_file_2eproto = nullptr;

const uint32_t TableStruct_file_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::file::FileUploadBlockReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::file::FileUploadBlockReq, rid_),
  PROTOBUF_FIELD_OFFSET(::file::FileUploadBlockReq, fid_),
  PROTOBUF_FIELD_OFFSET(::file::FileUploadBlockReq, name_),
  PROTOBUF_FIELD_OFFSET(::file::FileUploadBlockReq, fsize_),
  PROTOBUF_FIELD_OFFSET(::file::FileUploadBlockReq, bnum_),
  PROTOBUF_FIELD_OFFSET(::file::FileUploadBlockReq, bsize_),
  PROTOBUF_FIELD_OFFSET(::file::FileUploadBlockReq, lbsize_),
  PROTOBUF_FIELD_OFFSET(::file::FileUploadBlockReq, bindex_),
  PROTOBUF_FIELD_OFFSET(::file::FileUploadBlockReq, offset_),
  PROTOBUF_FIELD_OFFSET(::file::FileUploadBlockReq, len_),
  PROTOBUF_FIELD_OFFSET(::file::FileUploadBlockReq, data_),
  PROTOBUF_FIELD_OFFSET(::file::FileUploadBlockReq, bfin_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::file::FileUploadBlockRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::file::FileUploadBlockRsp, code_),
  PROTOBUF_FIELD_OFFSET(::file::FileUploadBlockRsp, msg_),
  PROTOBUF_FIELD_OFFSET(::file::FileUploadBlockRsp, rid_),
  PROTOBUF_FIELD_OFFSET(::file::FileUploadBlockRsp, fid_),
  PROTOBUF_FIELD_OFFSET(::file::FileUploadBlockRsp, bindex_),
  PROTOBUF_FIELD_OFFSET(::file::FileUploadBlockRsp, offset_),
  PROTOBUF_FIELD_OFFSET(::file::FileUploadBlockRsp, len_),
  PROTOBUF_FIELD_OFFSET(::file::FileUploadBlockRsp, sbid_),
  PROTOBUF_FIELD_OFFSET(::file::FileUploadBlockRsp, sfid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::file::FileUploadBlockRspList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::file::FileUploadBlockRspList, fileuploadblockrsp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::file::FileDownloadReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::file::FileDownloadReq, rid_),
  PROTOBUF_FIELD_OFFSET(::file::FileDownloadReq, sfid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::file::FileDownloadRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::file::FileDownloadRsp, code_),
  PROTOBUF_FIELD_OFFSET(::file::FileDownloadRsp, msg_),
  PROTOBUF_FIELD_OFFSET(::file::FileDownloadRsp, name_),
  PROTOBUF_FIELD_OFFSET(::file::FileDownloadRsp, size_),
  PROTOBUF_FIELD_OFFSET(::file::FileDownloadRsp, bnum_),
  PROTOBUF_FIELD_OFFSET(::file::FileDownloadRsp, bsize_),
  PROTOBUF_FIELD_OFFSET(::file::FileDownloadRsp, lbsize_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::file::FileDownloadBlockReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::file::FileDownloadBlockReq, rid_),
  PROTOBUF_FIELD_OFFSET(::file::FileDownloadBlockReq, sfid_),
  PROTOBUF_FIELD_OFFSET(::file::FileDownloadBlockReq, bindex_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::file::FileDownloadBlockRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::file::FileDownloadBlockRsp, rid_),
  PROTOBUF_FIELD_OFFSET(::file::FileDownloadBlockRsp, data_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::file::FileUploadBlockReq)},
  { 18, -1, -1, sizeof(::file::FileUploadBlockRsp)},
  { 33, -1, -1, sizeof(::file::FileUploadBlockRspList)},
  { 40, -1, -1, sizeof(::file::FileDownloadReq)},
  { 48, -1, -1, sizeof(::file::FileDownloadRsp)},
  { 61, -1, -1, sizeof(::file::FileDownloadBlockReq)},
  { 70, -1, -1, sizeof(::file::FileDownloadBlockRsp)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::file::_FileUploadBlockReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::file::_FileUploadBlockRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::file::_FileUploadBlockRspList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::file::_FileDownloadReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::file::_FileDownloadRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::file::_FileDownloadBlockReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::file::_FileDownloadBlockRsp_default_instance_),
};

const char descriptor_table_protodef_file_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\nfile.proto\022\004file\"\301\001\n\022FileUploadBlockRe"
  "q\022\013\n\003rid\030\001 \001(\t\022\013\n\003fid\030\002 \001(\t\022\014\n\004name\030\003 \001("
  "\t\022\r\n\005fsize\030\004 \001(\003\022\014\n\004bnum\030\005 \001(\005\022\r\n\005bsize\030"
  "\006 \001(\005\022\016\n\006lbsize\030\007 \001(\005\022\016\n\006bindex\030\010 \001(\005\022\016\n"
  "\006offset\030\t \001(\005\022\013\n\003len\030\n \001(\005\022\014\n\004data\030\013 \001(\014"
  "\022\014\n\004bfin\030\014 \001(\005\"\222\001\n\022FileUploadBlockRsp\022\014\n"
  "\004code\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\022\013\n\003rid\030\003 \001(\t\022\013\n"
  "\003fid\030\004 \001(\t\022\016\n\006bindex\030\005 \001(\005\022\016\n\006offset\030\006 \001"
  "(\005\022\013\n\003len\030\007 \001(\005\022\014\n\004sbid\030\010 \001(\t\022\014\n\004sfid\030\t "
  "\001(\t\"N\n\026FileUploadBlockRspList\0224\n\022fileUpl"
  "oadBlockRsp\030\001 \003(\0132\030.file.FileUploadBlock"
  "Rsp\",\n\017FileDownloadReq\022\013\n\003rid\030\001 \001(\t\022\014\n\004s"
  "fid\030\002 \001(\t\"u\n\017FileDownloadRsp\022\014\n\004code\030\001 \001"
  "(\005\022\013\n\003msg\030\002 \001(\t\022\014\n\004name\030\003 \001(\t\022\014\n\004size\030\004 "
  "\001(\003\022\014\n\004bnum\030\005 \001(\005\022\r\n\005bsize\030\006 \001(\005\022\016\n\006lbsi"
  "ze\030\007 \001(\005\"A\n\024FileDownloadBlockReq\022\013\n\003rid\030"
  "\001 \001(\t\022\014\n\004sfid\030\002 \001(\t\022\016\n\006bindex\030\003 \001(\005\"1\n\024F"
  "ileDownloadBlockRsp\022\013\n\003rid\030\001 \001(\t\022\014\n\004data"
  "\030\002 \001(\0142\333\001\n\013FileService\022G\n\013uploadBlock\022\030."
  "file.FileUploadBlockReq\032\034.file.FileUploa"
  "dBlockRspList(\001\0228\n\010download\022\025.file.FileD"
  "ownloadReq\032\025.file.FileDownloadRsp\022I\n\rdow"
  "nloadBlock\022\032.file.FileDownloadBlockReq\032\032"
  ".file.FileDownloadBlockRsp0\001B\036\n\034com.andi"
  "n.services.grpc.fileb\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_file_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_file_2eproto = {
  false, false, 988, descriptor_table_protodef_file_2eproto, "file.proto", 
  &descriptor_table_file_2eproto_once, nullptr, 0, 7,
  schemas, file_default_instances, TableStruct_file_2eproto::offsets,
  file_level_metadata_file_2eproto, file_level_enum_descriptors_file_2eproto, file_level_service_descriptors_file_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_file_2eproto_getter() {
  return &descriptor_table_file_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_file_2eproto(&descriptor_table_file_2eproto);
namespace file {

// ===================================================================

class FileUploadBlockReq::_Internal {
 public:
};

FileUploadBlockReq::FileUploadBlockReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:file.FileUploadBlockReq)
}
FileUploadBlockReq::FileUploadBlockReq(const FileUploadBlockReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    rid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArenaForAllocation());
  }
  fid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    fid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_fid().empty()) {
    fid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_fid(), 
      GetArenaForAllocation());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data().empty()) {
    data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_data(), 
      GetArenaForAllocation());
  }
  ::memcpy(&fsize_, &from.fsize_,
    static_cast<size_t>(reinterpret_cast<char*>(&bfin_) -
    reinterpret_cast<char*>(&fsize_)) + sizeof(bfin_));
  // @@protoc_insertion_point(copy_constructor:file.FileUploadBlockReq)
}

inline void FileUploadBlockReq::SharedCtor() {
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  rid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
fid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  fid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&fsize_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&bfin_) -
    reinterpret_cast<char*>(&fsize_)) + sizeof(bfin_));
}

FileUploadBlockReq::~FileUploadBlockReq() {
  // @@protoc_insertion_point(destructor:file.FileUploadBlockReq)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void FileUploadBlockReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  fid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void FileUploadBlockReq::ArenaDtor(void* object) {
  FileUploadBlockReq* _this = reinterpret_cast< FileUploadBlockReq* >(object);
  (void)_this;
}
void FileUploadBlockReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FileUploadBlockReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FileUploadBlockReq::Clear() {
// @@protoc_insertion_point(message_clear_start:file.FileUploadBlockReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rid_.ClearToEmpty();
  fid_.ClearToEmpty();
  name_.ClearToEmpty();
  data_.ClearToEmpty();
  ::memset(&fsize_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bfin_) -
      reinterpret_cast<char*>(&fsize_)) + sizeof(bfin_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FileUploadBlockReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string rid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "file.FileUploadBlockReq.rid"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string fid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_fid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "file.FileUploadBlockReq.fid"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "file.FileUploadBlockReq.name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 fsize = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          fsize_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 bnum = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          bnum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 bsize = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          bsize_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 lbsize = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          lbsize_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 bindex = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          bindex_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 offset = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          offset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 len = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          len_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes data = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 bfin = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          bfin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FileUploadBlockReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:file.FileUploadBlockReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string rid = 1;
  if (!this->_internal_rid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "file.FileUploadBlockReq.rid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_rid(), target);
  }

  // string fid = 2;
  if (!this->_internal_fid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_fid().data(), static_cast<int>(this->_internal_fid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "file.FileUploadBlockReq.fid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_fid(), target);
  }

  // string name = 3;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "file.FileUploadBlockReq.name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_name(), target);
  }

  // int64 fsize = 4;
  if (this->_internal_fsize() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_fsize(), target);
  }

  // int32 bnum = 5;
  if (this->_internal_bnum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_bnum(), target);
  }

  // int32 bsize = 6;
  if (this->_internal_bsize() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_bsize(), target);
  }

  // int32 lbsize = 7;
  if (this->_internal_lbsize() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_lbsize(), target);
  }

  // int32 bindex = 8;
  if (this->_internal_bindex() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->_internal_bindex(), target);
  }

  // int32 offset = 9;
  if (this->_internal_offset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(9, this->_internal_offset(), target);
  }

  // int32 len = 10;
  if (this->_internal_len() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(10, this->_internal_len(), target);
  }

  // bytes data = 11;
  if (!this->_internal_data().empty()) {
    target = stream->WriteBytesMaybeAliased(
        11, this->_internal_data(), target);
  }

  // int32 bfin = 12;
  if (this->_internal_bfin() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(12, this->_internal_bfin(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:file.FileUploadBlockReq)
  return target;
}

size_t FileUploadBlockReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:file.FileUploadBlockReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string rid = 1;
  if (!this->_internal_rid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string fid = 2;
  if (!this->_internal_fid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_fid());
  }

  // string name = 3;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // bytes data = 11;
  if (!this->_internal_data().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  // int64 fsize = 4;
  if (this->_internal_fsize() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_fsize());
  }

  // int32 bnum = 5;
  if (this->_internal_bnum() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_bnum());
  }

  // int32 bsize = 6;
  if (this->_internal_bsize() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_bsize());
  }

  // int32 lbsize = 7;
  if (this->_internal_lbsize() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_lbsize());
  }

  // int32 bindex = 8;
  if (this->_internal_bindex() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_bindex());
  }

  // int32 offset = 9;
  if (this->_internal_offset() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_offset());
  }

  // int32 len = 10;
  if (this->_internal_len() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_len());
  }

  // int32 bfin = 12;
  if (this->_internal_bfin() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_bfin());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FileUploadBlockReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FileUploadBlockReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FileUploadBlockReq::GetClassData() const { return &_class_data_; }

void FileUploadBlockReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FileUploadBlockReq *>(to)->MergeFrom(
      static_cast<const FileUploadBlockReq &>(from));
}


void FileUploadBlockReq::MergeFrom(const FileUploadBlockReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:file.FileUploadBlockReq)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_rid().empty()) {
    _internal_set_rid(from._internal_rid());
  }
  if (!from._internal_fid().empty()) {
    _internal_set_fid(from._internal_fid());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_data().empty()) {
    _internal_set_data(from._internal_data());
  }
  if (from._internal_fsize() != 0) {
    _internal_set_fsize(from._internal_fsize());
  }
  if (from._internal_bnum() != 0) {
    _internal_set_bnum(from._internal_bnum());
  }
  if (from._internal_bsize() != 0) {
    _internal_set_bsize(from._internal_bsize());
  }
  if (from._internal_lbsize() != 0) {
    _internal_set_lbsize(from._internal_lbsize());
  }
  if (from._internal_bindex() != 0) {
    _internal_set_bindex(from._internal_bindex());
  }
  if (from._internal_offset() != 0) {
    _internal_set_offset(from._internal_offset());
  }
  if (from._internal_len() != 0) {
    _internal_set_len(from._internal_len());
  }
  if (from._internal_bfin() != 0) {
    _internal_set_bfin(from._internal_bfin());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FileUploadBlockReq::CopyFrom(const FileUploadBlockReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:file.FileUploadBlockReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileUploadBlockReq::IsInitialized() const {
  return true;
}

void FileUploadBlockReq::InternalSwap(FileUploadBlockReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &rid_, lhs_arena,
      &other->rid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &fid_, lhs_arena,
      &other->fid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &data_, lhs_arena,
      &other->data_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FileUploadBlockReq, bfin_)
      + sizeof(FileUploadBlockReq::bfin_)
      - PROTOBUF_FIELD_OFFSET(FileUploadBlockReq, fsize_)>(
          reinterpret_cast<char*>(&fsize_),
          reinterpret_cast<char*>(&other->fsize_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FileUploadBlockReq::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_file_2eproto_getter, &descriptor_table_file_2eproto_once,
      file_level_metadata_file_2eproto[0]);
}

// ===================================================================

class FileUploadBlockRsp::_Internal {
 public:
};

FileUploadBlockRsp::FileUploadBlockRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:file.FileUploadBlockRsp)
}
FileUploadBlockRsp::FileUploadBlockRsp(const FileUploadBlockRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_msg().empty()) {
    msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_msg(), 
      GetArenaForAllocation());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    rid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArenaForAllocation());
  }
  fid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    fid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_fid().empty()) {
    fid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_fid(), 
      GetArenaForAllocation());
  }
  sbid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    sbid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sbid().empty()) {
    sbid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sbid(), 
      GetArenaForAllocation());
  }
  sfid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    sfid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sfid().empty()) {
    sfid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sfid(), 
      GetArenaForAllocation());
  }
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&len_) -
    reinterpret_cast<char*>(&code_)) + sizeof(len_));
  // @@protoc_insertion_point(copy_constructor:file.FileUploadBlockRsp)
}

inline void FileUploadBlockRsp::SharedCtor() {
msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  rid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
fid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  fid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
sbid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  sbid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
sfid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  sfid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&code_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&len_) -
    reinterpret_cast<char*>(&code_)) + sizeof(len_));
}

FileUploadBlockRsp::~FileUploadBlockRsp() {
  // @@protoc_insertion_point(destructor:file.FileUploadBlockRsp)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void FileUploadBlockRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  fid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sbid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sfid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void FileUploadBlockRsp::ArenaDtor(void* object) {
  FileUploadBlockRsp* _this = reinterpret_cast< FileUploadBlockRsp* >(object);
  (void)_this;
}
void FileUploadBlockRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FileUploadBlockRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FileUploadBlockRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:file.FileUploadBlockRsp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty();
  rid_.ClearToEmpty();
  fid_.ClearToEmpty();
  sbid_.ClearToEmpty();
  sfid_.ClearToEmpty();
  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&len_) -
      reinterpret_cast<char*>(&code_)) + sizeof(len_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FileUploadBlockRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "file.FileUploadBlockRsp.msg"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string rid = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "file.FileUploadBlockRsp.rid"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string fid = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_fid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "file.FileUploadBlockRsp.fid"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 bindex = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          bindex_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 offset = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          offset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 len = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          len_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string sbid = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_sbid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "file.FileUploadBlockRsp.sbid"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string sfid = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          auto str = _internal_mutable_sfid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "file.FileUploadBlockRsp.sfid"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FileUploadBlockRsp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:file.FileUploadBlockRsp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->_internal_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string msg = 2;
  if (!this->_internal_msg().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "file.FileUploadBlockRsp.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  // string rid = 3;
  if (!this->_internal_rid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "file.FileUploadBlockRsp.rid");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_rid(), target);
  }

  // string fid = 4;
  if (!this->_internal_fid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_fid().data(), static_cast<int>(this->_internal_fid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "file.FileUploadBlockRsp.fid");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_fid(), target);
  }

  // int32 bindex = 5;
  if (this->_internal_bindex() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_bindex(), target);
  }

  // int32 offset = 6;
  if (this->_internal_offset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_offset(), target);
  }

  // int32 len = 7;
  if (this->_internal_len() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_len(), target);
  }

  // string sbid = 8;
  if (!this->_internal_sbid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sbid().data(), static_cast<int>(this->_internal_sbid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "file.FileUploadBlockRsp.sbid");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_sbid(), target);
  }

  // string sfid = 9;
  if (!this->_internal_sfid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sfid().data(), static_cast<int>(this->_internal_sfid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "file.FileUploadBlockRsp.sfid");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_sfid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:file.FileUploadBlockRsp)
  return target;
}

size_t FileUploadBlockRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:file.FileUploadBlockRsp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 2;
  if (!this->_internal_msg().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // string rid = 3;
  if (!this->_internal_rid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string fid = 4;
  if (!this->_internal_fid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_fid());
  }

  // string sbid = 8;
  if (!this->_internal_sbid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sbid());
  }

  // string sfid = 9;
  if (!this->_internal_sfid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sfid());
  }

  // int32 code = 1;
  if (this->_internal_code() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_code());
  }

  // int32 bindex = 5;
  if (this->_internal_bindex() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_bindex());
  }

  // int32 offset = 6;
  if (this->_internal_offset() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_offset());
  }

  // int32 len = 7;
  if (this->_internal_len() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_len());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FileUploadBlockRsp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FileUploadBlockRsp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FileUploadBlockRsp::GetClassData() const { return &_class_data_; }

void FileUploadBlockRsp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FileUploadBlockRsp *>(to)->MergeFrom(
      static_cast<const FileUploadBlockRsp &>(from));
}


void FileUploadBlockRsp::MergeFrom(const FileUploadBlockRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:file.FileUploadBlockRsp)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_msg().empty()) {
    _internal_set_msg(from._internal_msg());
  }
  if (!from._internal_rid().empty()) {
    _internal_set_rid(from._internal_rid());
  }
  if (!from._internal_fid().empty()) {
    _internal_set_fid(from._internal_fid());
  }
  if (!from._internal_sbid().empty()) {
    _internal_set_sbid(from._internal_sbid());
  }
  if (!from._internal_sfid().empty()) {
    _internal_set_sfid(from._internal_sfid());
  }
  if (from._internal_code() != 0) {
    _internal_set_code(from._internal_code());
  }
  if (from._internal_bindex() != 0) {
    _internal_set_bindex(from._internal_bindex());
  }
  if (from._internal_offset() != 0) {
    _internal_set_offset(from._internal_offset());
  }
  if (from._internal_len() != 0) {
    _internal_set_len(from._internal_len());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FileUploadBlockRsp::CopyFrom(const FileUploadBlockRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:file.FileUploadBlockRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileUploadBlockRsp::IsInitialized() const {
  return true;
}

void FileUploadBlockRsp::InternalSwap(FileUploadBlockRsp* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &msg_, lhs_arena,
      &other->msg_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &rid_, lhs_arena,
      &other->rid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &fid_, lhs_arena,
      &other->fid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &sbid_, lhs_arena,
      &other->sbid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &sfid_, lhs_arena,
      &other->sfid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FileUploadBlockRsp, len_)
      + sizeof(FileUploadBlockRsp::len_)
      - PROTOBUF_FIELD_OFFSET(FileUploadBlockRsp, code_)>(
          reinterpret_cast<char*>(&code_),
          reinterpret_cast<char*>(&other->code_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FileUploadBlockRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_file_2eproto_getter, &descriptor_table_file_2eproto_once,
      file_level_metadata_file_2eproto[1]);
}

// ===================================================================

class FileUploadBlockRspList::_Internal {
 public:
};

FileUploadBlockRspList::FileUploadBlockRspList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  fileuploadblockrsp_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:file.FileUploadBlockRspList)
}
FileUploadBlockRspList::FileUploadBlockRspList(const FileUploadBlockRspList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      fileuploadblockrsp_(from.fileuploadblockrsp_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:file.FileUploadBlockRspList)
}

inline void FileUploadBlockRspList::SharedCtor() {
}

FileUploadBlockRspList::~FileUploadBlockRspList() {
  // @@protoc_insertion_point(destructor:file.FileUploadBlockRspList)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void FileUploadBlockRspList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FileUploadBlockRspList::ArenaDtor(void* object) {
  FileUploadBlockRspList* _this = reinterpret_cast< FileUploadBlockRspList* >(object);
  (void)_this;
}
void FileUploadBlockRspList::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FileUploadBlockRspList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FileUploadBlockRspList::Clear() {
// @@protoc_insertion_point(message_clear_start:file.FileUploadBlockRspList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fileuploadblockrsp_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FileUploadBlockRspList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .file.FileUploadBlockRsp fileUploadBlockRsp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_fileuploadblockrsp(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FileUploadBlockRspList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:file.FileUploadBlockRspList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .file.FileUploadBlockRsp fileUploadBlockRsp = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_fileuploadblockrsp_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_fileuploadblockrsp(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:file.FileUploadBlockRspList)
  return target;
}

size_t FileUploadBlockRspList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:file.FileUploadBlockRspList)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .file.FileUploadBlockRsp fileUploadBlockRsp = 1;
  total_size += 1UL * this->_internal_fileuploadblockrsp_size();
  for (const auto& msg : this->fileuploadblockrsp_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FileUploadBlockRspList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FileUploadBlockRspList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FileUploadBlockRspList::GetClassData() const { return &_class_data_; }

void FileUploadBlockRspList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FileUploadBlockRspList *>(to)->MergeFrom(
      static_cast<const FileUploadBlockRspList &>(from));
}


void FileUploadBlockRspList::MergeFrom(const FileUploadBlockRspList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:file.FileUploadBlockRspList)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  fileuploadblockrsp_.MergeFrom(from.fileuploadblockrsp_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FileUploadBlockRspList::CopyFrom(const FileUploadBlockRspList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:file.FileUploadBlockRspList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileUploadBlockRspList::IsInitialized() const {
  return true;
}

void FileUploadBlockRspList::InternalSwap(FileUploadBlockRspList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  fileuploadblockrsp_.InternalSwap(&other->fileuploadblockrsp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FileUploadBlockRspList::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_file_2eproto_getter, &descriptor_table_file_2eproto_once,
      file_level_metadata_file_2eproto[2]);
}

// ===================================================================

class FileDownloadReq::_Internal {
 public:
};

FileDownloadReq::FileDownloadReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:file.FileDownloadReq)
}
FileDownloadReq::FileDownloadReq(const FileDownloadReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    rid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArenaForAllocation());
  }
  sfid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    sfid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sfid().empty()) {
    sfid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sfid(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:file.FileDownloadReq)
}

inline void FileDownloadReq::SharedCtor() {
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  rid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
sfid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  sfid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

FileDownloadReq::~FileDownloadReq() {
  // @@protoc_insertion_point(destructor:file.FileDownloadReq)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void FileDownloadReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sfid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void FileDownloadReq::ArenaDtor(void* object) {
  FileDownloadReq* _this = reinterpret_cast< FileDownloadReq* >(object);
  (void)_this;
}
void FileDownloadReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FileDownloadReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FileDownloadReq::Clear() {
// @@protoc_insertion_point(message_clear_start:file.FileDownloadReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rid_.ClearToEmpty();
  sfid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FileDownloadReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string rid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "file.FileDownloadReq.rid"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string sfid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_sfid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "file.FileDownloadReq.sfid"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FileDownloadReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:file.FileDownloadReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string rid = 1;
  if (!this->_internal_rid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "file.FileDownloadReq.rid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_rid(), target);
  }

  // string sfid = 2;
  if (!this->_internal_sfid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sfid().data(), static_cast<int>(this->_internal_sfid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "file.FileDownloadReq.sfid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_sfid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:file.FileDownloadReq)
  return target;
}

size_t FileDownloadReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:file.FileDownloadReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string rid = 1;
  if (!this->_internal_rid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string sfid = 2;
  if (!this->_internal_sfid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sfid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FileDownloadReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FileDownloadReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FileDownloadReq::GetClassData() const { return &_class_data_; }

void FileDownloadReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FileDownloadReq *>(to)->MergeFrom(
      static_cast<const FileDownloadReq &>(from));
}


void FileDownloadReq::MergeFrom(const FileDownloadReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:file.FileDownloadReq)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_rid().empty()) {
    _internal_set_rid(from._internal_rid());
  }
  if (!from._internal_sfid().empty()) {
    _internal_set_sfid(from._internal_sfid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FileDownloadReq::CopyFrom(const FileDownloadReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:file.FileDownloadReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileDownloadReq::IsInitialized() const {
  return true;
}

void FileDownloadReq::InternalSwap(FileDownloadReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &rid_, lhs_arena,
      &other->rid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &sfid_, lhs_arena,
      &other->sfid_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata FileDownloadReq::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_file_2eproto_getter, &descriptor_table_file_2eproto_once,
      file_level_metadata_file_2eproto[3]);
}

// ===================================================================

class FileDownloadRsp::_Internal {
 public:
};

FileDownloadRsp::FileDownloadRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:file.FileDownloadRsp)
}
FileDownloadRsp::FileDownloadRsp(const FileDownloadRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_msg().empty()) {
    msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_msg(), 
      GetArenaForAllocation());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&lbsize_) -
    reinterpret_cast<char*>(&code_)) + sizeof(lbsize_));
  // @@protoc_insertion_point(copy_constructor:file.FileDownloadRsp)
}

inline void FileDownloadRsp::SharedCtor() {
msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&code_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&lbsize_) -
    reinterpret_cast<char*>(&code_)) + sizeof(lbsize_));
}

FileDownloadRsp::~FileDownloadRsp() {
  // @@protoc_insertion_point(destructor:file.FileDownloadRsp)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void FileDownloadRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void FileDownloadRsp::ArenaDtor(void* object) {
  FileDownloadRsp* _this = reinterpret_cast< FileDownloadRsp* >(object);
  (void)_this;
}
void FileDownloadRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FileDownloadRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FileDownloadRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:file.FileDownloadRsp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty();
  name_.ClearToEmpty();
  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lbsize_) -
      reinterpret_cast<char*>(&code_)) + sizeof(lbsize_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FileDownloadRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "file.FileDownloadRsp.msg"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "file.FileDownloadRsp.name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 size = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 bnum = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          bnum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 bsize = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          bsize_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 lbsize = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          lbsize_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FileDownloadRsp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:file.FileDownloadRsp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->_internal_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string msg = 2;
  if (!this->_internal_msg().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "file.FileDownloadRsp.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  // string name = 3;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "file.FileDownloadRsp.name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_name(), target);
  }

  // int64 size = 4;
  if (this->_internal_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_size(), target);
  }

  // int32 bnum = 5;
  if (this->_internal_bnum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_bnum(), target);
  }

  // int32 bsize = 6;
  if (this->_internal_bsize() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_bsize(), target);
  }

  // int32 lbsize = 7;
  if (this->_internal_lbsize() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_lbsize(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:file.FileDownloadRsp)
  return target;
}

size_t FileDownloadRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:file.FileDownloadRsp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 2;
  if (!this->_internal_msg().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // string name = 3;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // int32 code = 1;
  if (this->_internal_code() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_code());
  }

  // int32 bnum = 5;
  if (this->_internal_bnum() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_bnum());
  }

  // int64 size = 4;
  if (this->_internal_size() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_size());
  }

  // int32 bsize = 6;
  if (this->_internal_bsize() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_bsize());
  }

  // int32 lbsize = 7;
  if (this->_internal_lbsize() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_lbsize());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FileDownloadRsp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FileDownloadRsp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FileDownloadRsp::GetClassData() const { return &_class_data_; }

void FileDownloadRsp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FileDownloadRsp *>(to)->MergeFrom(
      static_cast<const FileDownloadRsp &>(from));
}


void FileDownloadRsp::MergeFrom(const FileDownloadRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:file.FileDownloadRsp)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_msg().empty()) {
    _internal_set_msg(from._internal_msg());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from._internal_code() != 0) {
    _internal_set_code(from._internal_code());
  }
  if (from._internal_bnum() != 0) {
    _internal_set_bnum(from._internal_bnum());
  }
  if (from._internal_size() != 0) {
    _internal_set_size(from._internal_size());
  }
  if (from._internal_bsize() != 0) {
    _internal_set_bsize(from._internal_bsize());
  }
  if (from._internal_lbsize() != 0) {
    _internal_set_lbsize(from._internal_lbsize());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FileDownloadRsp::CopyFrom(const FileDownloadRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:file.FileDownloadRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileDownloadRsp::IsInitialized() const {
  return true;
}

void FileDownloadRsp::InternalSwap(FileDownloadRsp* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &msg_, lhs_arena,
      &other->msg_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FileDownloadRsp, lbsize_)
      + sizeof(FileDownloadRsp::lbsize_)
      - PROTOBUF_FIELD_OFFSET(FileDownloadRsp, code_)>(
          reinterpret_cast<char*>(&code_),
          reinterpret_cast<char*>(&other->code_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FileDownloadRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_file_2eproto_getter, &descriptor_table_file_2eproto_once,
      file_level_metadata_file_2eproto[4]);
}

// ===================================================================

class FileDownloadBlockReq::_Internal {
 public:
};

FileDownloadBlockReq::FileDownloadBlockReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:file.FileDownloadBlockReq)
}
FileDownloadBlockReq::FileDownloadBlockReq(const FileDownloadBlockReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    rid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArenaForAllocation());
  }
  sfid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    sfid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sfid().empty()) {
    sfid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sfid(), 
      GetArenaForAllocation());
  }
  bindex_ = from.bindex_;
  // @@protoc_insertion_point(copy_constructor:file.FileDownloadBlockReq)
}

inline void FileDownloadBlockReq::SharedCtor() {
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  rid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
sfid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  sfid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
bindex_ = 0;
}

FileDownloadBlockReq::~FileDownloadBlockReq() {
  // @@protoc_insertion_point(destructor:file.FileDownloadBlockReq)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void FileDownloadBlockReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sfid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void FileDownloadBlockReq::ArenaDtor(void* object) {
  FileDownloadBlockReq* _this = reinterpret_cast< FileDownloadBlockReq* >(object);
  (void)_this;
}
void FileDownloadBlockReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FileDownloadBlockReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FileDownloadBlockReq::Clear() {
// @@protoc_insertion_point(message_clear_start:file.FileDownloadBlockReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rid_.ClearToEmpty();
  sfid_.ClearToEmpty();
  bindex_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FileDownloadBlockReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string rid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "file.FileDownloadBlockReq.rid"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string sfid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_sfid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "file.FileDownloadBlockReq.sfid"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 bindex = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          bindex_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FileDownloadBlockReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:file.FileDownloadBlockReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string rid = 1;
  if (!this->_internal_rid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "file.FileDownloadBlockReq.rid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_rid(), target);
  }

  // string sfid = 2;
  if (!this->_internal_sfid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sfid().data(), static_cast<int>(this->_internal_sfid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "file.FileDownloadBlockReq.sfid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_sfid(), target);
  }

  // int32 bindex = 3;
  if (this->_internal_bindex() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_bindex(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:file.FileDownloadBlockReq)
  return target;
}

size_t FileDownloadBlockReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:file.FileDownloadBlockReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string rid = 1;
  if (!this->_internal_rid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string sfid = 2;
  if (!this->_internal_sfid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sfid());
  }

  // int32 bindex = 3;
  if (this->_internal_bindex() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_bindex());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FileDownloadBlockReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FileDownloadBlockReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FileDownloadBlockReq::GetClassData() const { return &_class_data_; }

void FileDownloadBlockReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FileDownloadBlockReq *>(to)->MergeFrom(
      static_cast<const FileDownloadBlockReq &>(from));
}


void FileDownloadBlockReq::MergeFrom(const FileDownloadBlockReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:file.FileDownloadBlockReq)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_rid().empty()) {
    _internal_set_rid(from._internal_rid());
  }
  if (!from._internal_sfid().empty()) {
    _internal_set_sfid(from._internal_sfid());
  }
  if (from._internal_bindex() != 0) {
    _internal_set_bindex(from._internal_bindex());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FileDownloadBlockReq::CopyFrom(const FileDownloadBlockReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:file.FileDownloadBlockReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileDownloadBlockReq::IsInitialized() const {
  return true;
}

void FileDownloadBlockReq::InternalSwap(FileDownloadBlockReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &rid_, lhs_arena,
      &other->rid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &sfid_, lhs_arena,
      &other->sfid_, rhs_arena
  );
  swap(bindex_, other->bindex_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FileDownloadBlockReq::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_file_2eproto_getter, &descriptor_table_file_2eproto_once,
      file_level_metadata_file_2eproto[5]);
}

// ===================================================================

class FileDownloadBlockRsp::_Internal {
 public:
};

FileDownloadBlockRsp::FileDownloadBlockRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:file.FileDownloadBlockRsp)
}
FileDownloadBlockRsp::FileDownloadBlockRsp(const FileDownloadBlockRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    rid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArenaForAllocation());
  }
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data().empty()) {
    data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_data(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:file.FileDownloadBlockRsp)
}

inline void FileDownloadBlockRsp::SharedCtor() {
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  rid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

FileDownloadBlockRsp::~FileDownloadBlockRsp() {
  // @@protoc_insertion_point(destructor:file.FileDownloadBlockRsp)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void FileDownloadBlockRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void FileDownloadBlockRsp::ArenaDtor(void* object) {
  FileDownloadBlockRsp* _this = reinterpret_cast< FileDownloadBlockRsp* >(object);
  (void)_this;
}
void FileDownloadBlockRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FileDownloadBlockRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FileDownloadBlockRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:file.FileDownloadBlockRsp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rid_.ClearToEmpty();
  data_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FileDownloadBlockRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string rid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "file.FileDownloadBlockRsp.rid"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FileDownloadBlockRsp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:file.FileDownloadBlockRsp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string rid = 1;
  if (!this->_internal_rid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "file.FileDownloadBlockRsp.rid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_rid(), target);
  }

  // bytes data = 2;
  if (!this->_internal_data().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:file.FileDownloadBlockRsp)
  return target;
}

size_t FileDownloadBlockRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:file.FileDownloadBlockRsp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string rid = 1;
  if (!this->_internal_rid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // bytes data = 2;
  if (!this->_internal_data().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FileDownloadBlockRsp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FileDownloadBlockRsp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FileDownloadBlockRsp::GetClassData() const { return &_class_data_; }

void FileDownloadBlockRsp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FileDownloadBlockRsp *>(to)->MergeFrom(
      static_cast<const FileDownloadBlockRsp &>(from));
}


void FileDownloadBlockRsp::MergeFrom(const FileDownloadBlockRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:file.FileDownloadBlockRsp)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_rid().empty()) {
    _internal_set_rid(from._internal_rid());
  }
  if (!from._internal_data().empty()) {
    _internal_set_data(from._internal_data());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FileDownloadBlockRsp::CopyFrom(const FileDownloadBlockRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:file.FileDownloadBlockRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileDownloadBlockRsp::IsInitialized() const {
  return true;
}

void FileDownloadBlockRsp::InternalSwap(FileDownloadBlockRsp* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &rid_, lhs_arena,
      &other->rid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &data_, lhs_arena,
      &other->data_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata FileDownloadBlockRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_file_2eproto_getter, &descriptor_table_file_2eproto_once,
      file_level_metadata_file_2eproto[6]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace file
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::file::FileUploadBlockReq* Arena::CreateMaybeMessage< ::file::FileUploadBlockReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::file::FileUploadBlockReq >(arena);
}
template<> PROTOBUF_NOINLINE ::file::FileUploadBlockRsp* Arena::CreateMaybeMessage< ::file::FileUploadBlockRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::file::FileUploadBlockRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::file::FileUploadBlockRspList* Arena::CreateMaybeMessage< ::file::FileUploadBlockRspList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::file::FileUploadBlockRspList >(arena);
}
template<> PROTOBUF_NOINLINE ::file::FileDownloadReq* Arena::CreateMaybeMessage< ::file::FileDownloadReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::file::FileDownloadReq >(arena);
}
template<> PROTOBUF_NOINLINE ::file::FileDownloadRsp* Arena::CreateMaybeMessage< ::file::FileDownloadRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::file::FileDownloadRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::file::FileDownloadBlockReq* Arena::CreateMaybeMessage< ::file::FileDownloadBlockReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::file::FileDownloadBlockReq >(arena);
}
template<> PROTOBUF_NOINLINE ::file::FileDownloadBlockRsp* Arena::CreateMaybeMessage< ::file::FileDownloadBlockRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::file::FileDownloadBlockRsp >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
